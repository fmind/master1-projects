package views;

import config.GameConfig;
import controllers.HighScoreController;
import controllers.LauncherController;
import java.awt.Font;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import models.Game;
import models.Game.Difficulty;
import models.Score;

/**
 * Launcher windows
 *
 * @author freaxmind
 */
public class LauncherFrame extends javax.swing.JFrame {

    private String helpMsg;

    public LauncherFrame() {
        initComponents();

        // set the (long) help message
        StringBuilder str = new StringBuilder("");
        str.append("Mesurez votre adresse à la programmation en réalisant une série de défi.\n");
        str.append("\n");
        str.append("Lisez bien l'histoire pour prendre connaissance de ce que vous devez faire.\n");
        str.append("Vous devrez ensuite implémenter une fonction qui répond aux tests fournis\n");
        str.append("\n");
        str.append("Vous disposez d'un nombre d'essai limité et vous êtes chronomètrés.\n");
        str.append("Plus vite vous finissez, plus vos essais restants capitaliseront votre score.\n");
        str.append("Vous pouvez faire un essai normal ou prendre le risque de tenter votre chance.\n");
        str.append("Tenter votre chance doublera votre score mais diminuera davantage votre nombre d'essai.\n");
        str.append("\n");
        str.append("Soyez sûr de votre code, ce n'est pas une épreuve de force.\n");
        str.append("\n");
        str.append("Bon courage Capitaine !\n");
        str.append("\n");
        str.append("Crédit: Médéric HURIER (développeur, designer, rédacteur)");
        this.helpMsg = str.toString();

        // game icon
        try {
            URL imgURL = new File(GameConfig.APP_ICON).toURI().toURL();
            ImageIcon icon = new ImageIcon(imgURL);
            this.setIconImage(icon.getImage());
        } catch (MalformedURLException ex) {
            Logger.getLogger("").log(Level.WARNING, "Impossible de charger l'image de l'application");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 50), new java.awt.Dimension(0, 50), new java.awt.Dimension(32767, 50));
        titleLabel = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 50), new java.awt.Dimension(0, 50), new java.awt.Dimension(32767, 50));
        newGameButton = new javax.swing.JButton();
        filler9 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 30), new java.awt.Dimension(0, 30), new java.awt.Dimension(32767, 30));
        continueGameButton = new javax.swing.JButton();
        filler10 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 30), new java.awt.Dimension(0, 30), new java.awt.Dimension(32767, 30));
        scoreButton = new javax.swing.JButton();
        filler11 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 30), new java.awt.Dimension(0, 30), new java.awt.Dimension(32767, 30));
        aideButton = new javax.swing.JButton();
        filler12 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 30), new java.awt.Dimension(0, 30), new java.awt.Dimension(32767, 30));
        quitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Capitain Duke - Lanceur de mission");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("LauncherFrame"); // NOI18N
        setResizable(false);

        panel.setAlignmentY(0.0F);
        panel.setMaximumSize(new java.awt.Dimension(500, 500));
        panel.setMinimumSize(new java.awt.Dimension(500, 500));
        panel.setPreferredSize(new java.awt.Dimension(500, 500));
        panel.setLayout(new javax.swing.BoxLayout(panel, javax.swing.BoxLayout.Y_AXIS));
        panel.add(filler2);

        titleLabel.setFont(new java.awt.Font("Ubuntu", 0, 48)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Captain Duke");
        titleLabel.setMaximumSize(new java.awt.Dimension(500, 56));
        titleLabel.setMinimumSize(new java.awt.Dimension(500, 56));
        panel.add(titleLabel);
        panel.add(filler1);

        newGameButton.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        newGameButton.setText("Nouvelle partie");
        newGameButton.setHideActionText(true);
        newGameButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newGameButton.setMargin(null);
        newGameButton.setMaximumSize(new java.awt.Dimension(450, 40));
        newGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameButtonActionPerformed(evt);
            }
        });
        panel.add(newGameButton);
        panel.add(filler9);

        continueGameButton.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        continueGameButton.setText("Continuer la partie");
        continueGameButton.setEnabled(false);
        continueGameButton.setHideActionText(true);
        continueGameButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        continueGameButton.setMargin(null);
        continueGameButton.setMaximumSize(new java.awt.Dimension(450, 40));
        continueGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continueGameButtonActionPerformed(evt);
            }
        });
        panel.add(continueGameButton);
        panel.add(filler10);

        scoreButton.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        scoreButton.setText("Meilleurs scores");
        scoreButton.setHideActionText(true);
        scoreButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        scoreButton.setMargin(null);
        scoreButton.setMaximumSize(new java.awt.Dimension(450, 40));
        scoreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scoreButtonActionPerformed(evt);
            }
        });
        panel.add(scoreButton);
        panel.add(filler11);

        aideButton.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        aideButton.setText("Aide");
        aideButton.setHideActionText(true);
        aideButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        aideButton.setMargin(null);
        aideButton.setMaximumSize(new java.awt.Dimension(450, 40));
        aideButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aideButtonActionPerformed(evt);
            }
        });
        panel.add(aideButton);
        panel.add(filler12);

        quitButton.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        quitButton.setText("Quitter");
        quitButton.setHideActionText(true);
        quitButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        quitButton.setMargin(null);
        quitButton.setMaximumSize(new java.awt.Dimension(450, 40));
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });
        panel.add(quitButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 25, Short.MAX_VALUE)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void continueGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continueGameButtonActionPerformed
        LauncherController.getInstance().continueGame();
    }//GEN-LAST:event_continueGameButtonActionPerformed

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        int n = JOptionPane.showConfirmDialog(
                this,
                "Êtes vous sûr de vouloir quitter l'application ?",
                "Confirmation",
                JOptionPane.YES_NO_OPTION);

        if (n == 0) {   // quit
            LauncherController.getInstance().quit();
        }
    }//GEN-LAST:event_quitButtonActionPerformed

    private void newGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameButtonActionPerformed
        // confirm if the user is about to delete a save file
        if (Game.hasSave()) {
            int n = JOptionPane.showConfirmDialog(
                    this,
                    "Êtes vous sûr de vouloir supprimer la partie en cours ?",
                    "Confirmation",
                    JOptionPane.YES_NO_OPTION);

            if (n != 0) {
                return;
            }
        }

        // ask to choose difficulty
        Difficulty d;
        Object[] possibilities = {"FACILE", "NORMALE", "DIFFICILE"};
        String s = (String) JOptionPane.showInputDialog(
                this,
                "Choisir la difficiulté",
                "Choix de la difficulté",
                JOptionPane.PLAIN_MESSAGE,
                null,
                possibilities,
                "NORMALE");

        if (s == null) {    // cancel action
            return;
        }

        switch (s) {
            case "FACILE":
                d = Difficulty.EASY;
                break;
            case "NORMALE":
                d = Difficulty.NORMAL;
                break;
            case "DIFFICILE":
                d = Difficulty.HARD;
                break;
            default:
                return; // cancel action (avoid warning error)
        }

        LauncherController.getInstance().newGame(d);
    }//GEN-LAST:event_newGameButtonActionPerformed

    private void aideButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aideButtonActionPerformed
        JOptionPane.showMessageDialog(this, this.helpMsg);
    }//GEN-LAST:event_aideButtonActionPerformed

    private void scoreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scoreButtonActionPerformed
        List<Score> scores = HighScoreController.getInstance().getScores();

        // score empty or error
        if (scores.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Aucun score n'a été posté pour l'instant");
            return;
        }

        // header
        StringBuilder str = new StringBuilder("");
        str.append("                                MEILLEURS SCORES\n\n");
        str.append(String.format("%-10s | %-15s | %-10s | %-15s\n", "Numéro", "Nom", "Score", "Date"));

        // body
        for (Score s : scores) {
            str.append(String.format("%-10s | %-15s | %-10s | %-15s\n", s.getRanking(), s.getName(), s.getScore(), s.getDate()));
        }

        // NOTE: can't be align because it is Java ...
        // work fine in command line
        // System.out.println(str.toString());
        JOptionPane.showMessageDialog(this, str.toString());
    }//GEN-LAST:event_scoreButtonActionPerformed

    /**
     * Change some button if the game has a save file or not
     *
     * @param visible
     */
    @Override
    public void setVisible(boolean visible) {
        if (Game.hasSave()) {
            this.continueGameButton.setEnabled(true);
            this.continueGameButton.setFont(this.continueGameButton.getFont().deriveFont(Font.BOLD));
            this.newGameButton.setFont(this.newGameButton.getFont().deriveFont(Font.PLAIN));
        } else {
            this.continueGameButton.setEnabled(false);
            this.continueGameButton.setFont(this.continueGameButton.getFont().deriveFont(Font.PLAIN));
            this.newGameButton.setFont(this.newGameButton.getFont().deriveFont(Font.BOLD));
        }

        super.setVisible(visible);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LauncherFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LauncherFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LauncherFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LauncherFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new LauncherFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aideButton;
    private javax.swing.JButton continueGameButton;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler10;
    private javax.swing.Box.Filler filler11;
    private javax.swing.Box.Filler filler12;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler9;
    private javax.swing.JButton newGameButton;
    private javax.swing.JPanel panel;
    private javax.swing.JButton quitButton;
    private javax.swing.JButton scoreButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
